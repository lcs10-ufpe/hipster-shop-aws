---
- name: Garantir que o Docker esteja instalado
  hosts: all
  remote_user: ec2-user
  gather_facts: false
  become: true
  tasks:
    - name: Instalar o Docker
      yum: name=docker

    - name: Garantir que o servico Docker seja iniciado e ativado
      service:
        name: docker
        state: started
        enabled: yes

    - name: Installing kubeadm, kubelet and kubectl
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kubelet kubeadm kubectl
          EOF
          # Set SELinux in permissive mode (effectively disabling it)
          sudo setenforce 0
          sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
          sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
          sudo systemctl enable --now kubelet
    
    - name: Init kubeadm
      shell: |
        sudo kubeadm init --pod-network-cidr=10.244.0.0/16

    - name: Start cluster
      shell:
        cmd: |
          mkdir $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          export KUBECONFIG=/etc/kubernetes/admin.conf
          sudo chmod 644 /etc/kubernetes/admin.conf
          kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.20.2/Documentation/kube-flannel.yml
          kubectl taint nodes --all node-role.kubernetes.io/control-plane-
          
    - name: Get Pods 1
      shell: |
        kubectl get pods --all-namespaces

    - name: Install Git 
      shell: |
        sudo yum -y install git

    - name: Clone this repository Hipster Shop
      shell:
        cmd: |
          git clone https://github.com/GoogleCloudPlatform/microservices-demo.git

    - name: Get Pods 2
      shell: |
        kubectl get pods --all-namespaces

    - name: Deploy the sample app to the cluster 
      shell: |
        cd microservices-demo
        kubectl apply -f ./release/kubernetes-manifests.yaml

    - name: Create externalIPs service frontend-external 
      shell: |
        kubectl patch svc frontend-external -n default -p '{"spec": {"type": "LoadBalancer", "externalIPs":["104.198.205.71"]}}'

    - name: NodePort 30274 service frontend-external 
      shell: |
        kubectl patch svc frontend-external -n default -p '{"spec": {"ports": [{"port": 80,"targetPort": 8080,"name": "http", "nodePort": 30274}],"type": "LoadBalancer"}}'
        
    - name: Get Pods 3
      shell: |
        kubectl get pods --all-namespaces
        
    - name: Get Pods 4
      shell: |
        kubectl get pods --all-namespaces
        
    - name: Get Pods 5
      shell: |
        kubectl get pods --all-namespaces
